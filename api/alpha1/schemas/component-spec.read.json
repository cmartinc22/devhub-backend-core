{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "component-spec.read.json",
  "title": "Component Spec",
  "description": "The \"spec\" field of entities of kind \"component\". This entity should not be used as new kind. It's Abstract",
  "type": "object",
  "allOf": [
    { "$ref": "entity-spec.read.json" },
    {
      "properties": {
        "application": {
          "description": "The \"Application\" entity that is accountable for this Component.",
          "$comment": "Note that executable applications cannot have components so it is not listed here",
          "oneOf": [
            { "$ref": "backendapp-ref.json" },
            { "$ref": "mobileapp-ref.json" },
            { "$ref": "webfrontend-ref.json" }
          ]
        },
        "owner": {
          "description": "The \"Group\" entity that is accountable for this component.",
          "$ref": "group-ref.json",
          "example": "group:developer-experience"
        },
        "lifecycle": {
          "type": "object",
          "properties": {
            "status": {
              "description": "Specifies if the application has been released to the public, is being deprecated or whether it is not in use any more.",
              "enum": [
                "launched",
                "beta",
                "alpha",
                "development",
                "deprecated",
                "decommissioned"
              ]
            },
            "launchDate": {
              "description": "Applications can have a launch date even if they are not yet launched. In that case the date is interpreted as the expected launch date instead of the actual one.",
              "type": "string",
              "format": "date-time"
            },
            "decommisionDate": {
              "description": "Applications can have a decommission date even if they are not yet decommissioned. In that case the date is interpreted as the expected decommission date instead of the actual one.",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "dependsOn": {
          "description": "contains an array of references of type \"component\" or \"backstage/docs\"",
          "type": "array",
          "items": {
            "$ref": "dependency-ref.json"
          }
        },
        "onCall": {
          "description": "The \"Group\" entity that is accountable for this component.",
          "oneOf": [
            {
              "$ref": "group-ref.json",
              "example": "group:developer-experience"
            },
            {
              "$ref": "link-ref-group.json",
              "example": "github/team:devex"
            }
          ]
        },
        "visibility": {
          "description": "defines who are the target users of this component",
          "type": "string",
          "enum": ["public", "internal", "private"]
        },
        "domain": {
          "description": "Is a relationship pointing to the \"Domain\" entity that this component belongs to",
          "$ref": "domain-ref.json",
          "example": "domain:platform"
        }
      },
      "required": ["application", "owner"]
    }
  ]
}
